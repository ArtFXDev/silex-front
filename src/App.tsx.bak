import { useEffect, useState } from "react";
import io, { Socket } from "socket.io-client";

import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemText from "@material-ui/core/ListItemText";

import SubmitButton from "./SubmitButton";

interface Client {
  dcc: string;
  startedAt: string;
}

const App: React.FC = () => {
  const [socket, setSocket] = useState<Socket | null>(null);
  const [socketConnected, setSocketConnected] = useState<boolean>(false);
  const [error, setError] = useState<string>("");

  const [clients, setClients] = useState<Client[]>([]);

  // Create the Socket.IO connection
  useEffect(() => {
    setSocket(io("http://localhost:4000"));
  }, []);

  // Handle socket events
  useEffect(() => {
    if (!socket) return;

    const updateConnected = () => setSocketConnected(socket.connected);

    socket.on("connect", () => {
      socket.emit("connected_clients", (response: Client[]) => {
        console.log("received", response);
        setClients(response);
      });

      updateConnected();
    });

    socket.on("disconnect", updateConnected);
    socket.on("connect_error", (err) => setError(err.message + " " + err.name));
  }, [socket]);

  return (
    <div>
      <div>
        <p>{error}</p>
        <p>Status: {socketConnected ? "Connected" : "Disconnected"}</p>
        {socket && <SubmitButton socket={socket} />}
      </div>

      {clients && (
        <List>
          {clients.map((client) => (
            <ListItem key={Math.random()} button divider>
              <ListItemText>{client.dcc}</ListItemText>
              <ListItemText>{client.startedAt}</ListItemText>
            </ListItem>
          ))}
        </List>
      )}
    </div>
  );
};

export default App;
